09:32:13.747 [main] INFO  c.e.journalApp.JournalAppApplication ---> Starting JournalAppApplication using Java 23.0.1 with PID 18276 (C:\Users\SOUMADEEP DAS\OneDrive\Dokumen\Spring_boot\journalApp\journalApp\target\classes started by SOUMADEEP DAS in C:\Users\SOUMADEEP DAS\OneDrive\Dokumen\Spring_boot)
09:32:13.754 [main] INFO  c.e.journalApp.JournalAppApplication ---> No active profile set, falling back to 1 default profile: "default"
09:32:14.444 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate ---> Multiple Spring Data modules found, entering strict repository configuration mode
09:32:14.446 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate ---> Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
09:32:14.567 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate ---> Finished Spring Data repository scanning in 113 ms. Found 3 MongoDB repository interfaces.
09:32:14.592 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate ---> Multiple Spring Data modules found, entering strict repository configuration mode
09:32:14.593 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate ---> Bootstrapping Spring Data Redis repositories in DEFAULT mode.
09:32:14.609 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport ---> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.journalApp.repository.ConfigJournalAppRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
09:32:14.610 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport ---> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.journalApp.repository.JournalEntryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
09:32:14.610 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport ---> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.journalApp.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
09:32:14.610 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate ---> Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
09:32:15.127 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer ---> Tomcat initialized with port 8080 (http)
09:32:15.137 [main] INFO  o.a.coyote.http11.Http11NioProtocol ---> Initializing ProtocolHandler ["http-nio-8080"]
09:32:15.139 [main] INFO  o.a.catalina.core.StandardService ---> Starting service [Tomcat]
09:32:15.139 [main] INFO  o.a.catalina.core.StandardEngine ---> Starting Servlet engine: [Apache Tomcat/10.1.34]
09:32:15.201 [main] INFO  o.a.c.c.C.[.[.[/journalApplication] ---> Initializing Spring embedded WebApplicationContext
09:32:15.202 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext ---> Root WebApplicationContext: initialization completed in 1386 ms
09:32:15.453 [main] INFO  org.mongodb.driver.client ---> MongoClient with metadata {"application": {"name": "Cluster0"}, "driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.2.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/23.0.1+11-39"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='kingKaiser', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5c448ef, com.mongodb.Jep395RecordCodecProvider@703e8050, com.mongodb.KotlinCodecProvider@49c1e294]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster0.zaaeb.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-6rrpva-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='Cluster0', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
09:32:15.534 [cluster-ClusterId{value='67d10747a5fe7c48cd4d59c7', description='Cluster0'}-srv-cluster0.zaaeb.mongodb.net] INFO  org.mongodb.driver.cluster ---> Adding discovered server cluster0-shard-00-00.zaaeb.mongodb.net:27017 to client view of cluster
09:32:15.562 [cluster-ClusterId{value='67d10747a5fe7c48cd4d59c7', description='Cluster0'}-srv-cluster0.zaaeb.mongodb.net] INFO  org.mongodb.driver.cluster ---> Adding discovered server cluster0-shard-00-01.zaaeb.mongodb.net:27017 to client view of cluster
09:32:15.565 [cluster-ClusterId{value='67d10747a5fe7c48cd4d59c7', description='Cluster0'}-srv-cluster0.zaaeb.mongodb.net] INFO  org.mongodb.driver.cluster ---> Adding discovered server cluster0-shard-00-02.zaaeb.mongodb.net:27017 to client view of cluster
09:32:15.785 [main] INFO  org.mongodb.driver.cluster ---> Waiting for server to become available for operation with ID 5. Remaining time: 29991 ms. Selector: WritableServerSelector, topology description: {type=REPLICA_SET, servers=[{address=cluster0-shard-00-00.zaaeb.mongodb.net:27017, type=UNKNOWN, state=CONNECTING}, {address=cluster0-shard-00-01.zaaeb.mongodb.net:27017, type=UNKNOWN, state=CONNECTING}, {address=cluster0-shard-00-02.zaaeb.mongodb.net:27017, type=UNKNOWN, state=CONNECTING}].
09:32:16.760 [cluster-ClusterId{value='67d10747a5fe7c48cd4d59c7', description='Cluster0'}-cluster0-shard-00-02.zaaeb.mongodb.net:27017] INFO  org.mongodb.driver.cluster ---> Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.zaaeb.mongodb.net:27017, type=REPLICA_SET_SECONDARY, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=392282100, minRoundTripTimeNanos=0, setName='atlas-6rrpva-shard-0', canonicalAddress=cluster0-shard-00-02.zaaeb.mongodb.net:27017, hosts=[cluster0-shard-00-01.zaaeb.mongodb.net:27017, cluster0-shard-00-02.zaaeb.mongodb.net:27017, cluster0-shard-00-00.zaaeb.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-01.zaaeb.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=260, topologyVersion=TopologyVersion{processId=67c3300fc542932965b1e847, counter=3}, lastWriteDate=Wed Mar 12 09:32:16 IST 2025, lastUpdateTimeNanos=174964692800800}
09:32:16.760 [cluster-ClusterId{value='67d10747a5fe7c48cd4d59c7', description='Cluster0'}-cluster0-shard-00-00.zaaeb.mongodb.net:27017] INFO  org.mongodb.driver.cluster ---> Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.zaaeb.mongodb.net:27017, type=REPLICA_SET_SECONDARY, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=392915800, minRoundTripTimeNanos=0, setName='atlas-6rrpva-shard-0', canonicalAddress=cluster0-shard-00-00.zaaeb.mongodb.net:27017, hosts=[cluster0-shard-00-01.zaaeb.mongodb.net:27017, cluster0-shard-00-02.zaaeb.mongodb.net:27017, cluster0-shard-00-00.zaaeb.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-01.zaaeb.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=260, topologyVersion=TopologyVersion{processId=67c32f96268c1a9d5cc735cd, counter=4}, lastWriteDate=Wed Mar 12 09:32:16 IST 2025, lastUpdateTimeNanos=174964692800800}
09:32:16.760 [cluster-ClusterId{value='67d10747a5fe7c48cd4d59c7', description='Cluster0'}-cluster0-shard-00-01.zaaeb.mongodb.net:27017] INFO  org.mongodb.driver.cluster ---> Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.zaaeb.mongodb.net:27017, type=REPLICA_SET_PRIMARY, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=392826000, minRoundTripTimeNanos=0, setName='atlas-6rrpva-shard-0', canonicalAddress=cluster0-shard-00-01.zaaeb.mongodb.net:27017, hosts=[cluster0-shard-00-01.zaaeb.mongodb.net:27017, cluster0-shard-00-02.zaaeb.mongodb.net:27017, cluster0-shard-00-00.zaaeb.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-01.zaaeb.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff00000000000000e8, setVersion=260, topologyVersion=TopologyVersion{processId=67c32fd35086ca60e935a267, counter=6}, lastWriteDate=Wed Mar 12 09:32:16 IST 2025, lastUpdateTimeNanos=174964692800900}
09:32:16.763 [cluster-ClusterId{value='67d10747a5fe7c48cd4d59c7', description='Cluster0'}-cluster0-shard-00-01.zaaeb.mongodb.net:27017] INFO  org.mongodb.driver.cluster ---> Discovered replica set primary cluster0-shard-00-01.zaaeb.mongodb.net:27017 with max election id 7fffffff00000000000000e8 and max set version 260
09:32:18.268 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer ---> Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
09:32:18.871 [main] INFO  o.s.v.b.OptionalValidatorFactoryBean ---> Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
09:32:19.073 [main] INFO  o.a.coyote.http11.Http11NioProtocol ---> Starting ProtocolHandler ["http-nio-8080"]
09:32:19.088 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer ---> Tomcat started on port 8080 (http) with context path '/journalApplication'
09:32:19.099 [main] INFO  c.e.journalApp.JournalAppApplication ---> Started JournalAppApplication in 5.716 seconds (process running for 6.257)
09:32:38.769 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown ---> Commencing graceful shutdown. Waiting for active requests to complete
09:32:38.778 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown ---> Graceful shutdown complete
